package set

import (
	"github.com/linfangrong/carrier/models/command/command"
	"github.com/linfangrong/carrier/models/command/process"
)

var CommandTable []command.Command = []command.Command{
	// Strings
	command.NewCommand([]byte("APPEND"), process.ProcKeyCommand, 3, false, false),
	command.NewCommand([]byte("BITCOUNT"), process.ProcKeyCommand, -2, true, false),
	command.NewCommand([]byte("BITOP"), process.ForbiddenCommand, -4, false, false),
	command.NewCommand([]byte("BITPOS"), process.ProcKeyCommand, -3, true, false),
	command.NewCommand([]byte("DECR"), process.ProcKeyCommand, 2, false, false),
	command.NewCommand([]byte("DECRBY"), process.ProcKeyCommand, 3, false, false),
	command.NewCommand([]byte("GET"), process.ProcKeyCommand, 2, true, false),
	command.NewCommand([]byte("GETBIT"), process.ProcKeyCommand, 3, true, false),
	command.NewCommand([]byte("GETRANGE"), process.ProcKeyCommand, 4, true, false),
	command.NewCommand([]byte("GETSET"), process.ProcKeyCommand, 3, false, false),
	command.NewCommand([]byte("INCR"), process.ProcKeyCommand, 2, false, false),
	command.NewCommand([]byte("INCRBY"), process.ProcKeyCommand, 3, false, false),
	command.NewCommand([]byte("INCRBYFLOAT"), process.ProcKeyCommand, 3, false, false),
	command.NewCommand([]byte("MGET"), process.MGetCommand, -2, true, false),
	command.NewCommand([]byte("MSET"), process.MSetCommand, -3, false, false),
	command.NewCommand([]byte("MSETNX"), process.ForbiddenCommand, -3, false, false),
	command.NewCommand([]byte("PSETEX"), process.ProcKeyCommand, 4, false, false),
	command.NewCommand([]byte("SET"), process.ProcKeyCommand, -3, false, false),
	command.NewCommand([]byte("SETBIT"), process.ProcKeyCommand, 4, false, false),
	command.NewCommand([]byte("SETEX"), process.ProcKeyCommand, 4, false, false),
	command.NewCommand([]byte("SETNX"), process.ProcKeyCommand, 3, false, false),
	command.NewCommand([]byte("SETRANGE"), process.ProcKeyCommand, 4, false, false),
	command.NewCommand([]byte("STRLEN"), process.ProcKeyCommand, 2, true, false),

	// Lists
	command.NewCommand([]byte("BLPOP"), process.ForbiddenCommand, -3, false, true),
	command.NewCommand([]byte("BRPOP"), process.ForbiddenCommand, -3, false, true),
	command.NewCommand([]byte("BRPOPLPUSH"), process.ForbiddenCommand, 4, false, true),
	command.NewCommand([]byte("LINDEX"), process.ProcKeyCommand, 3, true, false),
	command.NewCommand([]byte("LINSERT"), process.ProcKeyCommand, 5, false, false),
	command.NewCommand([]byte("LLEN"), process.ProcKeyCommand, 2, true, false),
	command.NewCommand([]byte("LPOP"), process.ProcKeyCommand, 2, false, false),
	command.NewCommand([]byte("LPUSH"), process.ProcKeyCommand, -3, false, false),
	command.NewCommand([]byte("LPUSHX"), process.ProcKeyCommand, 3, false, false),
	command.NewCommand([]byte("LRANGE"), process.ProcKeyCommand, 4, true, false),
	command.NewCommand([]byte("LREM"), process.ProcKeyCommand, 4, false, false),
	command.NewCommand([]byte("LSET"), process.ProcKeyCommand, 4, false, false),
	command.NewCommand([]byte("LTRIM"), process.ProcKeyCommand, 4, false, false),
	command.NewCommand([]byte("RPOP"), process.ProcKeyCommand, 2, false, false),
	command.NewCommand([]byte("RPOPLPUSH"), process.ForbiddenCommand, 4, false, true),
	command.NewCommand([]byte("RPUSH"), process.ProcKeyCommand, -3, false, false),
	command.NewCommand([]byte("RPUSHX"), process.ProcKeyCommand, 3, false, false),

	// Connection
	command.NewCommand([]byte("AUTH"), process.ForbiddenCommand, 2, true, false),
	command.NewCommand([]byte("ECHO"), process.EchoCommand, 2, true, false),
	command.NewCommand([]byte("PING"), process.PingCommand, -1, true, false),
	command.NewCommand([]byte("QUIT"), process.ForbiddenCommand, -1, true, false),
	command.NewCommand([]byte("SELECT"), process.SelectCommand, 2, true, false),

	// Server
	command.NewCommand([]byte("BGREWRITEAOF"), process.ForbiddenCommand, 1, true, false),
	command.NewCommand([]byte("BGSAVE"), process.ForbiddenCommand, 1, true, false),
	command.NewCommand([]byte("CLIENT"), process.ForbiddenCommand, -2, true, false),
	command.NewCommand([]byte("COMMAND"), process.ForbiddenCommand, 0, true, false),
	command.NewCommand([]byte("CONFIG"), process.ForbiddenCommand, -2, true, false),
	command.NewCommand([]byte("DBSIZE"), process.ForbiddenCommand, 1, true, false),
	command.NewCommand([]byte("DEBUG"), process.ForbiddenCommand, -2, true, false),
	command.NewCommand([]byte("FLUSHALL"), process.ForbiddenCommand, 1, false, false),
	command.NewCommand([]byte("FLUSHDB"), process.ForbiddenCommand, 1, false, false),
	command.NewCommand([]byte("INFO"), process.ForbiddenCommand, -1, true, false),
	command.NewCommand([]byte("LASTSAVE"), process.ForbiddenCommand, 1, true, false),
	command.NewCommand([]byte("MONITOR"), process.ForbiddenCommand, 1, true, false),
	command.NewCommand([]byte("ROLE"), process.ForbiddenCommand, 1, true, false),
	command.NewCommand([]byte("SAVE"), process.ForbiddenCommand, 1, true, false),
	command.NewCommand([]byte("SHUTDOWN"), process.ForbiddenCommand, -1, true, false),
	command.NewCommand([]byte("SLAVEOF"), process.ForbiddenCommand, 3, false, true),
	command.NewCommand([]byte("SLOWLOG"), process.ForbiddenCommand, -2, true, false),
	command.NewCommand([]byte("SYNC"), process.ForbiddenCommand, 1, true, false),
	command.NewCommand([]byte("TIME"), process.ForbiddenCommand, 1, true, false),

	// Cluster
	command.NewCommand([]byte("CLUSTER"), process.ForbiddenCommand, -2, true, false),

	// Keys
	command.NewCommand([]byte("DEL"), process.DelCommand, -2, false, false),
	command.NewCommand([]byte("DUMP"), process.ProcKeyCommand, 2, true, false),
	command.NewCommand([]byte("EXISTS"), process.ProcKeyCommand, 2, true, false), // TODO 3.0.3
	command.NewCommand([]byte("EXPIRE"), process.ProcKeyCommand, 3, false, false),
	command.NewCommand([]byte("EXPIREAT"), process.ProcKeyCommand, 3, false, false),
	command.NewCommand([]byte("KEYS"), process.ForbiddenCommand, 2, true, true),
	command.NewCommand([]byte("MIGRATE"), process.ForbiddenCommand, -6, false, false),
	command.NewCommand([]byte("MOVE"), process.ForbiddenCommand, 3, false, false),
	command.NewCommand([]byte("OBJECT"), process.ForbiddenCommand, 3, true, false),
	command.NewCommand([]byte("PERSIST"), process.ProcKeyCommand, 2, false, false),
	command.NewCommand([]byte("PEXPIRE"), process.ProcKeyCommand, 3, false, false),
	command.NewCommand([]byte("PEXPIREAT"), process.ProcKeyCommand, 3, false, false),
	command.NewCommand([]byte("PTTL"), process.ProcKeyCommand, 2, true, false),
	command.NewCommand([]byte("RANDOMKEY"), process.ForbiddenCommand, 1, true, true),
	command.NewCommand([]byte("RENAME"), process.ForbiddenCommand, 3, false, false),
	command.NewCommand([]byte("RENAMENX"), process.ForbiddenCommand, 3, false, false),
	command.NewCommand([]byte("RESTORE"), process.ProcKeyCommand, -4, false, false),
	command.NewCommand([]byte("SCAN"), process.ForbiddenCommand, -2, true, false),
	command.NewCommand([]byte("SORT"), process.ProcKeyCommand, -2, false, false),
	command.NewCommand([]byte("TTL"), process.ProcKeyCommand, 2, true, false),
	command.NewCommand([]byte("TYPE"), process.ProcKeyCommand, 2, true, false),
	command.NewCommand([]byte("WAIT"), process.ForbiddenCommand, 3, true, false),

	// Transactions
	command.NewCommand([]byte("DISCARD"), process.ForbiddenCommand, 1, true, true),
	command.NewCommand([]byte("EXEC"), process.ForbiddenCommand, 1, false, true),
	command.NewCommand([]byte("MULTI"), process.ForbiddenCommand, 1, true, true),
	command.NewCommand([]byte("UNWATCH"), process.ForbiddenCommand, 1, true, true),
	command.NewCommand([]byte("WATCH"), process.ForbiddenCommand, -2, true, true),

	// Scripting
	command.NewCommand([]byte("EVAL"), process.ForbiddenCommand, -3, false, true),
	command.NewCommand([]byte("EVALSHA"), process.ForbiddenCommand, -3, false, true),
	command.NewCommand([]byte("SCRIPT"), process.ForbiddenCommand, -2, true, true),

	// Geo
	command.NewCommand([]byte("GEOADD"), process.ProcKeyCommand, -5, false, false),
	command.NewCommand([]byte("GEODIST"), process.ProcKeyCommand, -4, true, false),
	command.NewCommand([]byte("GEOHASH"), process.ProcKeyCommand, -2, true, false),
	command.NewCommand([]byte("GEOPOS"), process.ProcKeyCommand, -2, true, false),
	command.NewCommand([]byte("GEORADIUS"), process.ProcKeyCommand, -6, true, false),
	command.NewCommand([]byte("GEORADIUSBYMEMBER"), process.ProcKeyCommand, -5, true, false),

	// Hashes
	command.NewCommand([]byte("HDEL"), process.ProcKeyCommand, -3, false, false),
	command.NewCommand([]byte("HEXISTS"), process.ProcKeyCommand, 3, true, false),
	command.NewCommand([]byte("HGET"), process.ProcKeyCommand, 3, true, false),
	command.NewCommand([]byte("HGETALL"), process.ProcKeyCommand, 2, true, false),
	command.NewCommand([]byte("HINCRBY"), process.ProcKeyCommand, 4, false, false),
	command.NewCommand([]byte("HINCRBYFLOAT"), process.ProcKeyCommand, 4, false, false),
	command.NewCommand([]byte("HKEYS"), process.ProcKeyCommand, 2, true, false),
	command.NewCommand([]byte("HLEN"), process.ProcKeyCommand, 2, true, false),
	command.NewCommand([]byte("HMGET"), process.ProcKeyCommand, -3, true, false),
	command.NewCommand([]byte("HMSET"), process.ProcKeyCommand, -4, false, false),
	command.NewCommand([]byte("HSCAN"), process.ProcKeyCommand, -3, true, false),
	command.NewCommand([]byte("HSET"), process.ProcKeyCommand, 4, false, false),
	command.NewCommand([]byte("HSETNX"), process.ProcKeyCommand, 4, false, false),
	command.NewCommand([]byte("HSTRLEN"), process.ProcKeyCommand, 3, true, false),
	command.NewCommand([]byte("HVALS"), process.ProcKeyCommand, 2, true, false),

	// HyperLogLog
	command.NewCommand([]byte("PFADD"), process.ProcKeyCommand, -2, false, false),
	command.NewCommand([]byte("PFCOUNT"), process.ProcKeyCommand, 2, true, false),
	command.NewCommand([]byte("PFMERGE"), process.ForbiddenCommand, -2, false, false),

	// Pub/Sub
	command.NewCommand([]byte("PSUBSCRIBE"), process.ForbiddenCommand, -2, true, false),
	command.NewCommand([]byte("PUBLISH"), process.ForbiddenCommand, 3, true, false),
	command.NewCommand([]byte("PUBSUB"), process.ForbiddenCommand, -2, true, false),
	command.NewCommand([]byte("PUNSUBSCRIBE"), process.ForbiddenCommand, -1, true, false),
	command.NewCommand([]byte("SUBSCRIBE"), process.ForbiddenCommand, -2, true, false),
	command.NewCommand([]byte("UNSUBSCRIBE"), process.ForbiddenCommand, -1, true, false),

	// Sets
	command.NewCommand([]byte("SADD"), process.ProcKeyCommand, -3, false, false),
	command.NewCommand([]byte("SCARD"), process.ProcKeyCommand, 2, true, false),
	command.NewCommand([]byte("SDIFF"), process.ForbiddenCommand, -2, true, false),
	command.NewCommand([]byte("SDIFFSTORE"), process.ForbiddenCommand, -3, false, false),
	command.NewCommand([]byte("SINTER"), process.ForbiddenCommand, -2, true, false),
	command.NewCommand([]byte("SINTERSTORE"), process.ForbiddenCommand, -3, false, false),
	command.NewCommand([]byte("SISMEMBER"), process.ProcKeyCommand, 3, true, false),
	command.NewCommand([]byte("SMEMBERS"), process.ProcKeyCommand, 2, true, false),
	command.NewCommand([]byte("SMOVE"), process.ForbiddenCommand, 4, false, false),
	command.NewCommand([]byte("SPOP"), process.ProcKeyCommand, -2, false, false),
	command.NewCommand([]byte("SRANDMEMBER"), process.ProcKeyCommand, -2, true, false),
	command.NewCommand([]byte("SREM"), process.ProcKeyCommand, -3, false, false),
	command.NewCommand([]byte("SSCAN"), process.ProcKeyCommand, -3, true, false),
	command.NewCommand([]byte("SUNION"), process.ForbiddenCommand, -2, true, false),
	command.NewCommand([]byte("SUNIONSTORE"), process.ForbiddenCommand, -3, false, false),

	// Sorted Sets
	command.NewCommand([]byte("ZADD"), process.ProcKeyCommand, -4, false, false),
	command.NewCommand([]byte("ZCARD"), process.ProcKeyCommand, 2, true, false),
	command.NewCommand([]byte("ZCOUNT"), process.ProcKeyCommand, 4, true, false),
	command.NewCommand([]byte("ZINCRBY"), process.ProcKeyCommand, 4, false, false),
	command.NewCommand([]byte("ZINTERSTORE"), process.ForbiddenCommand, -4, false, false),
	command.NewCommand([]byte("ZLEXCOUNT"), process.ProcKeyCommand, 4, true, false),
	command.NewCommand([]byte("ZRANGE"), process.ProcKeyCommand, -4, true, false),
	command.NewCommand([]byte("ZRANGEBYLEX"), process.ProcKeyCommand, -4, true, false),
	command.NewCommand([]byte("ZRANGEBYSCORE"), process.ProcKeyCommand, -4, true, false),
	command.NewCommand([]byte("ZRANK"), process.ProcKeyCommand, 3, true, false),
	command.NewCommand([]byte("ZREM"), process.ProcKeyCommand, -3, false, false),
	command.NewCommand([]byte("ZREMRANGEBYLEX"), process.ProcKeyCommand, 4, false, false),
	command.NewCommand([]byte("ZREMRANGEBYRANK"), process.ProcKeyCommand, 4, false, false),
	command.NewCommand([]byte("ZREMRANGEBYSCORE"), process.ProcKeyCommand, 4, false, false),
	command.NewCommand([]byte("ZREVRANGE"), process.ProcKeyCommand, -4, true, false),
	command.NewCommand([]byte("ZREVRANGEBYLEX"), process.ProcKeyCommand, -4, true, false),
	command.NewCommand([]byte("ZREVRANGEBYSCORE"), process.ProcKeyCommand, -4, true, false),
	command.NewCommand([]byte("ZREVRANK"), process.ProcKeyCommand, 3, true, false),
	command.NewCommand([]byte("ZSCAN"), process.ProcKeyCommand, -3, true, false),
	command.NewCommand([]byte("ZSCORE"), process.ProcKeyCommand, 3, true, false),
	command.NewCommand([]byte("ZUNIONSTORE"), process.ForbiddenCommand, -4, false, false),

	// Finite Sorted Sets
	command.NewCommand([]byte("XADD"), process.ProcKeyCommand, -4, false, false),
	command.NewCommand([]byte("XCARD"), process.ProcKeyCommand, 2, true, false),
	command.NewCommand([]byte("XCOUNT"), process.ProcKeyCommand, 4, true, false),
	command.NewCommand([]byte("XGETFINITY"), process.ProcKeyCommand, 2, true, false),
	command.NewCommand([]byte("XGETPRUNING"), process.ProcKeyCommand, 2, true, false),
	command.NewCommand([]byte("XINCRBY"), process.ProcKeyCommand, -4, false, false),
	command.NewCommand([]byte("XLEXCOUNT"), process.ProcKeyCommand, 4, true, false),
	command.NewCommand([]byte("XRANGE"), process.ProcKeyCommand, -4, true, false),
	command.NewCommand([]byte("XRANGEBYLEX"), process.ProcKeyCommand, -4, true, false),
	command.NewCommand([]byte("XRANGEBYSCORE"), process.ProcKeyCommand, -4, true, false),
	command.NewCommand([]byte("XRANK"), process.ProcKeyCommand, 3, true, false),
	command.NewCommand([]byte("XREM"), process.ProcKeyCommand, -3, false, false),
	command.NewCommand([]byte("XREMRANGEBYLEX"), process.ProcKeyCommand, 4, false, false),
	command.NewCommand([]byte("XREMRANGEBYRANK"), process.ProcKeyCommand, 4, false, false),
	command.NewCommand([]byte("XREMRANGEBYSCORE"), process.ProcKeyCommand, 4, false, false),
	command.NewCommand([]byte("XREVRANGE"), process.ProcKeyCommand, -4, true, false),
	command.NewCommand([]byte("XREVRANGEBYLEX"), process.ProcKeyCommand, -4, true, false),
	command.NewCommand([]byte("XREVRANGEBYSCORE"), process.ProcKeyCommand, -4, true, false),
	command.NewCommand([]byte("XREVRANK"), process.ProcKeyCommand, 3, true, false),
	command.NewCommand([]byte("XSCAN"), process.ProcKeyCommand, -3, true, false),
	command.NewCommand([]byte("XSCORE"), process.ProcKeyCommand, 3, true, false),
	command.NewCommand([]byte("XSETOPTIONS"), process.ProcKeyCommand, -4, false, false),
}
